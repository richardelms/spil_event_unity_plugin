{\rtf1\ansi\ansicpg1252\cocoartf1347\cocoasubrtf570
{\fonttbl\f0\fswiss\fcharset0 ArialMT;\f1\froman\fcharset0 Times-Roman;}
{\colortbl;\red255\green255\blue255;\red0\green0\blue0;\red16\green60\blue192;}
\paperw11900\paperh16840\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\deftab720
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 The Spil Event System allows you to track custom game events much like google analytics or other tracking tools, it also handles push notification services for you and provides a custom Spilgames more apps page similar to the Chartboost more apps feature.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The good news is that it is very easy to integrate. Just follow the steps below to get started. You can also checkout the example scene and script within the plugin to see examples to even tracking.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\pard\pardeftab720\sl400

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 1
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 : Download and Import the unity package provided.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\pard\pardeftab720\sl400

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 2
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 : Add the Spil Prefab.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Open the Spilgames folder now in your assets folder and add the SpilSDK prefab to your first scene (splash screen for example).
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\pard\pardeftab720\sl400

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 3
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 : Add the events you would like to track anywhere in your game.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 To track an event simply use one of the following methods anywhere in your code.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Spil.trackEvent(string eventName);
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 or
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Spil.trackEvent(string eventName, Dictionary<
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 string
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ,
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 string
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 > eventParams);
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The first version can be used for simple events and only needs a string for the event name.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The second version is for adding more information to an event, opten the more data the better so send as much as you like.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Examples for use of these methods can be found in the plugins examples folder.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Note: There is no need to create an object reference to the Spil sdk, all methods function as static.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\pard\pardeftab720\sl400

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 4
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 : Deal with Responses.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If you have not agreed on any special events or responses with the Spilgames team then you may skip this step.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 In the Spil C# script, at the bottom you will find the method 
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 OnResponseReceived(
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 string
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0  response);
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Any messages passed back by the Spil servers will come in here in the form of a JSON string. In the SDK i have used a custom class JSONObject to parse this data however you do not have to, feel free to treat the data as you see fit.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 You can find documentation on the JSONObject class here:
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400
{\field{\*\fldinst{HYPERLINK "http://wiki.unity3d.com/index.php?title=JSONObject"}}{\fldrslt 
\f0\fs30 \cf3 \expnd0\expndtw0\kerning0
\ul \ulc3 \outl0\strokewidth0 \strokec3 http://wiki.unity3d.com/index.php?title=JSONObject}}\
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 In the current script I have included an example of parsing the data and then rewarding the player with in game currency, feel free to adapt that to fit your needs.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\pard\pardeftab720\sl400

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 5: 
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Import
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0  
\b0 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Google play services 
\b \expnd0\expndtw0\kerning0
\outl0\strokewidth0 ANDROID ONLY
\f1\b0\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The Android version of the SpilSDK requires the google play services library to function.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If you are using chartboost or google analytics then you probably have it imported already and can skip this step, if not then follow these instructions to import it.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 First, download the latest version of google play services with the android SDK manager.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Then navigate to 
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 your_android_sdk_instilation_dir /extras/google/google_play_services/libproject
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 then copy the folder 
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 google-play-services_lib
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Into your Assets/Plugins/Android folder
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 That should be all you need to do.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\
\
\pard\pardeftab720\sl400

\f0\b\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 Support and feedback
\f1\b0\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 If you need help with this integration please feel free to email {\field{\*\fldinst{HYPERLINK "mailto:richard.elms@spilgames.com"}}{\fldrslt \cf3 \expnd0\expndtw0\kerning0
\ul \ulc3 \outl0\strokewidth0 \strokec3 richard.elms@spilgames.com}} or get me on skype at richardmelms.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720
\cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
\pard\pardeftab720\sl400

\f0\fs30 \cf2 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 The plugin is still in the early stages, so if while working on the project, you think of a better way to do things please do let us know, feedback is very welcome.
\f1\fs24 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \
}